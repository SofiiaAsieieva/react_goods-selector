{"version":3,"sources":["components/ProductName.jsx","components/classNameButton.js","components/SelectedButton.jsx","components/RemovedButton.jsx","components/ProductList.jsx","App.js","index.js"],"names":["ProductName","props","isActive","name","selectedGood","className","includes","classNameButton","isHidden","SelectedButton","selectedProduct","type","onClick","event","RemovedButton","removedProduct","ProductList","products","map","product","index","id","App","state","setState","filter","resetProduct","this","productsGood","join","length","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4OASO,IAAMA,EAAc,SAACC,GAAW,IANXC,EAOlBC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,aAEd,OACE,uBACEC,WAXsBH,EAWQE,EAAaE,SAASH,GAVjDD,EACH,SACA,KAUCC,IChBA,SAASI,EAAgBC,GAC9B,OAAOA,EACH,eACA,GCCC,IAAMC,EAAiB,SAACR,GAAW,IAChCE,EAAwCF,EAAxCE,KAAMO,EAAkCT,EAAlCS,gBAAiBN,EAAiBH,EAAjBG,aAE/B,OACE,4BACEO,KAAK,SACLN,UAAWE,EAAgBH,EAAaE,SAASH,IACjDS,QAAS,SAACC,GACRH,EAAgBP,KAJpB,WCJSW,EAAgB,SAACb,GAAW,IAC/BE,EAAuCF,EAAvCE,KAAMY,EAAiCd,EAAjCc,eAAgBX,EAAiBH,EAAjBG,aAE9B,OACE,4BACEO,KAAK,SACLN,UAAWE,GAAiBH,EAAaE,SAASH,IAClDS,QAAS,SAACC,GACRE,EAAeZ,KAJnB,WCFSa,EAAc,SAACf,GAAW,IAC7BE,EAAwDF,EAAxDE,KAAMC,EAAkDH,EAAlDG,aAAcM,EAAoCT,EAApCS,gBAAiBK,EAAmBd,EAAnBc,eAE7C,OACE,oCACE,kBAAC,EAAD,CACEZ,KAAMA,EACNC,aAAcA,IAGhB,kBAAC,EAAD,CACED,KAAMA,EACNO,gBAAiBA,EACjBN,aAAcA,IAGhB,kBAAC,EAAD,CACED,KAAMA,EACNY,eAAgBA,EAChBX,aAAcA,MCPhBa,EAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAG+BC,KAAI,SAACC,EAASC,GAAV,MAAqB,CACxDjB,KAAMgB,EACNE,GAAID,EAAQ,MAsECE,E,4MAlEbC,MAAQ,CACNnB,aAAc,CAAC,Q,EAGjBM,gBAAkB,SAACP,GACZ,EAAKoB,MAAMnB,aAAaE,SAASH,IACpC,EAAKqB,UAAS,SAAAD,GAAK,MAAK,CAAEnB,aAAa,GAAD,mBAAMmB,EAAMnB,cAAZ,CAA0BD,S,EAIpEY,eAAiB,SAACZ,GACZ,EAAKoB,MAAMnB,aAAaE,SAASH,IACnC,EAAKqB,UAAS,SAAAD,GAAK,MAAK,CACtBnB,aAAcmB,EAAMnB,aAAaqB,QAAO,SAAAN,GAAO,OAAIA,IAAYhB,U,EAKrEuB,aAAe,WACb,EAAKF,SAAS,CAAEpB,aAAc,M,4CAGhC,WAAU,IAAD,OACCA,EAAiBuB,KAAKJ,MAAtBnB,aACFwB,EAAexB,EAAayB,KAAK,MAEvC,OACE,yBAAKxB,UAAU,OACb,4BACGD,EAAa0B,OAAS,EAAtB,yBACqBF,GAClB,qBAIN,4BACEjB,KAAK,SACLN,UACEE,EAAwC,IAAxBH,EAAa0B,QAE/BlB,QAAS,SAACC,GACR,EAAKa,iBANT,SAYA,6BACGT,EAASC,KAAI,SAAAC,GAAO,OACnB,yBAAKY,IAAKZ,EAAQE,IAEhB,kBAAC,EAAD,CACElB,KAAMgB,EAAQhB,KACdC,aAAcA,EACdM,gBAAiB,EAAKA,gBACtBK,eAAgB,EAAKA,2B,GAxDnBiB,IAAMC,WCnBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.594d0d03.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction classNameParagraph(isActive) {\n  return isActive\n    ? 'active'\n    : '';\n}\n\nexport const ProductName = (props) => {\n  const { name, selectedGood } = props;\n\n  return (\n    <p\n      className={classNameParagraph(selectedGood.includes(name))}\n    >\n      {name}\n    </p>\n  );\n};\n\nProductName.propTypes = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  selectedGood: PropTypes.arrayOf(PropTypes.string).isRequired,\n}).isRequired;\n","export function classNameButton(isHidden) {\n  return isHidden\n    ? 'hiddenButton'\n    : '';\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { classNameButton } from './classNameButton';\n\nexport const SelectedButton = (props) => {\n  const { name, selectedProduct, selectedGood } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className={classNameButton(selectedGood.includes(name))}\n      onClick={(event) => {\n        selectedProduct(name);\n      }}\n    >\n      ✔\n    </button>\n  );\n};\n\nSelectedButton.propTypes = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  selectedProduct: PropTypes.func.isRequired,\n  selectedGood: PropTypes.arrayOf(PropTypes.string).isRequired,\n}).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { classNameButton } from './classNameButton';\n\nexport const RemovedButton = (props) => {\n  const { name, removedProduct, selectedGood } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className={classNameButton(!selectedGood.includes(name))}\n      onClick={(event) => {\n        removedProduct(name);\n      }}\n    >\n      ✘\n    </button>\n  );\n};\n\nRemovedButton.propTypes = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  removedProduct: PropTypes.func.isRequired,\n  selectedGood: PropTypes.arrayOf(PropTypes.string).isRequired,\n}).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ProductName } from './ProductName';\nimport { SelectedButton } from './SelectedButton';\nimport { RemovedButton } from './RemovedButton';\n\nexport const ProductList = (props) => {\n  const { name, selectedGood, selectedProduct, removedProduct } = props;\n\n  return (\n    <>\n      <ProductName\n        name={name}\n        selectedGood={selectedGood}\n      />\n\n      <SelectedButton\n        name={name}\n        selectedProduct={selectedProduct}\n        selectedGood={selectedGood}\n      />\n\n      <RemovedButton\n        name={name}\n        removedProduct={removedProduct}\n        selectedGood={selectedGood}\n      />\n    </>\n  );\n};\n\nProductList.propTypes = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  selectedGood: PropTypes.arrayOf(PropTypes.string).isRequired,\n  removedProduct: PropTypes.func.isRequired,\n  selectedProduct: PropTypes.func.isRequired,\n}).isRequired;\n","import React from 'react';\nimport './App.scss';\nimport { ProductList } from './components/ProductList';\nimport { classNameButton } from './components/classNameButton';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst products = goodsFromServer.map((product, index) => ({\n  name: product,\n  id: index + 1,\n}));\n\nclass App extends React.Component {\n  state = {\n    selectedGood: ['Jam'],\n  }\n\n  selectedProduct = (name) => {\n    if (!this.state.selectedGood.includes(name)) {\n      this.setState(state => ({ selectedGood: [...state.selectedGood, name] }));\n    }\n  };\n\n  removedProduct = (name) => {\n    if (this.state.selectedGood.includes(name)) {\n      this.setState(state => ({\n        selectedGood: state.selectedGood.filter(product => product !== name),\n      }));\n    }\n  };\n\n  resetProduct = () => {\n    this.setState({ selectedGood: [] });\n  }\n\n  render() {\n    const { selectedGood } = this.state;\n    const productsGood = selectedGood.join(', ');\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {selectedGood.length > 0\n            ? `Selected good: ${productsGood}`\n            : 'No goods selected'\n          }\n        </h1>\n\n        <button\n          type=\"button\"\n          className={\n            classNameButton(selectedGood.length === 0)\n          }\n          onClick={(event) => {\n            this.resetProduct();\n          }}\n        >\n          reset\n        </button>\n\n        <div>\n          {products.map(product => (\n            <div key={product.id}>\n\n              <ProductList\n                name={product.name}\n                selectedGood={selectedGood}\n                selectedProduct={this.selectedProduct}\n                removedProduct={this.removedProduct}\n              />\n\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}