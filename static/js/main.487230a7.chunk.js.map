{"version":3,"sources":["components/ProductName.jsx","components/SelectedButton.jsx","components/RemovedButton.jsx","App.js","index.js"],"names":["ProductName","props","isActive","id","name","selectedGood","key","className","includes","SelectedButton","selectedProduct","type","onClick","event","RemovedButton","removedProduct","products","map","product","index","App","state","setState","filter","resetProduct","this","productsGood","join","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4OASO,IAAMA,EAAc,SAACC,GAAW,IANpBC,EAOTC,EAA2BF,EAA3BE,GAAIC,EAAuBH,EAAvBG,KAAMC,EAAiBJ,EAAjBI,aAElB,OACE,uBACEC,IAAKH,EACLI,WAZaL,EAYQG,EAAaG,SAASJ,GAXxCF,EACH,SACA,KAWCE,ICdMK,EAAiB,SAACR,GAAW,IAChCG,EAA0BH,EAA1BG,KAAMM,EAAoBT,EAApBS,gBAEd,OACE,4BACEC,KAAK,SACLC,QAAS,SAACC,GACRH,EAAgBN,KAHpB,WCJSU,EAAgB,SAACb,GAAW,IAC/BG,EAAyBH,EAAzBG,KAAMW,EAAmBd,EAAnBc,eAEd,OACE,4BACEJ,KAAK,SACLC,QAAS,SAACC,GACRE,EAAeX,KAHnB,WCYEY,EAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAG+BC,KAAI,SAACC,EAASC,GAAV,MAAqB,CACxDf,KAAMc,EACNf,GAAIgB,EAAQ,MA2ECC,E,4MAvEbC,MAAQ,CACNhB,aAAc,CAAC,Q,EAGjBK,gBAAkB,SAACN,GACZ,EAAKiB,MAAMhB,aAAaG,SAASJ,IACpC,EAAKkB,UAAS,SAAAD,GAAK,MAAK,CAAEhB,aAAa,GAAD,mBAAMgB,EAAMhB,cAAZ,CAA0BD,S,EAIpEW,eAAiB,SAACX,GACZ,EAAKiB,MAAMhB,aAAaG,SAASJ,IACnC,EAAKkB,UAAS,SAAAD,GAAK,MAAK,CACtBhB,aAAcgB,EAAMhB,aAAakB,QAAO,SAAAL,GAAO,OAAIA,IAAYd,U,EAKrEoB,aAAe,WACb,EAAKF,SAAS,CAAEjB,aAAc,M,4CAGhC,WAAU,IAAD,OACCA,EAAiBoB,KAAKJ,MAAtBhB,aACFqB,EAAerB,EAAasB,KAAK,MAEvC,OACE,yBAAKpB,UAAU,OACb,4BACGF,EAAauB,OAAS,EAAtB,yBACqBF,GAClB,qBAIN,4BACEf,KAAK,SACLC,QAAS,SAACC,GACR,EAAKW,iBAHT,SASA,6BACGR,EAASC,KAAI,SAAAC,GAAO,OACnB,oCACE,kBAAC,EAAD,CACEf,GAAIe,EAAQf,GACZC,KAAMc,EAAQd,KACdC,aAAcA,IAGhB,kBAAC,EAAD,CACED,KAAMc,EAAQd,KACdM,gBAAiB,EAAKA,kBAGxB,kBAAC,EAAD,CACEN,KAAMc,EAAQd,KACdW,eAAgB,EAAKA,2B,GA7DnBc,IAAMC,WCpBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.487230a7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction className(isActive) {\n  return isActive\n    ? 'active'\n    : '';\n}\n\nexport const ProductName = (props) => {\n  const { id, name, selectedGood } = props;\n\n  return (\n    <p\n      key={id}\n      className={className(selectedGood.includes(name))}\n    >\n      {name}\n    </p>\n  );\n};\n\nProductName.propTypes = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  selectedGood: PropTypes.arrayOf(PropTypes.string).isRequired,\n}).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SelectedButton = (props) => {\n  const { name, selectedProduct } = props;\n\n  return (\n    <button\n      type=\"button\"\n      onClick={(event) => {\n        selectedProduct(name);\n      }}\n    >\n      ✔\n    </button>\n  );\n};\n\nSelectedButton.propTypes = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  selectedProduct: PropTypes.func.isRequired,\n}).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const RemovedButton = (props) => {\n  const { name, removedProduct } = props;\n\n  return (\n    <button\n      type=\"button\"\n      onClick={(event) => {\n        removedProduct(name);\n      }}\n    >\n      ✘\n    </button>\n  );\n};\n\nRemovedButton.propTypes = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  removedProduct: PropTypes.func.isRequired,\n}).isRequired;\n","import React from 'react';\nimport './App.scss';\nimport { ProductName } from './components/ProductName';\nimport { SelectedButton } from './components/SelectedButton';\nimport { RemovedButton } from './components/RemovedButton';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst products = goodsFromServer.map((product, index) => ({\n  name: product,\n  id: index + 1,\n}));\n\nclass App extends React.Component {\n  state = {\n    selectedGood: ['Jam'],\n  }\n\n  selectedProduct = (name) => {\n    if (!this.state.selectedGood.includes(name)) {\n      this.setState(state => ({ selectedGood: [...state.selectedGood, name] }));\n    }\n  };\n\n  removedProduct = (name) => {\n    if (this.state.selectedGood.includes(name)) {\n      this.setState(state => ({\n        selectedGood: state.selectedGood.filter(product => product !== name),\n      }));\n    }\n  };\n\n  resetProduct = () => {\n    this.setState({ selectedGood: [] });\n  }\n\n  render() {\n    const { selectedGood } = this.state;\n    const productsGood = selectedGood.join(', ');\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {selectedGood.length > 0\n            ? `Selected good: ${productsGood}`\n            : 'No goods selected'\n          }\n        </h1>\n\n        <button\n          type=\"button\"\n          onClick={(event) => {\n            this.resetProduct();\n          }}\n        >\n          reset\n        </button>\n\n        <div>\n          {products.map(product => (\n            <>\n              <ProductName\n                id={product.id}\n                name={product.name}\n                selectedGood={selectedGood}\n              />\n\n              <SelectedButton\n                name={product.name}\n                selectedProduct={this.selectedProduct}\n              />\n\n              <RemovedButton\n                name={product.name}\n                removedProduct={this.removedProduct}\n              />\n\n            </>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}